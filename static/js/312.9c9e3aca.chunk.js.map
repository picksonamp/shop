{"version":3,"file":"static/js/312.9c9e3aca.chunk.js","mappings":"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","sources":["components/main-section/registration/registration.tsx","webpack://shop/./src/components/main-section/registration/registration.module.css?3144"],"sourcesContent":["import React from \"react\";\r\nimport User from \"../../../data/interfaces/user\";\r\nimport { Link, useNavigate, useLocation } from \"react-router-dom\";\r\nimport style from './registration.module.css';\r\nimport { TextField, Button} from \"@mui/material\";\r\n\r\ninterface RegistrationProps {\r\n    currentUser: User,\r\n    setCurrentUser: React.Dispatch<React.SetStateAction<User>>,\r\n    auth: boolean,\r\n    setAuth: React.Dispatch<React.SetStateAction<boolean>>\r\n}\r\n\r\nconst Registration: React.FC<RegistrationProps> = ({ currentUser, setCurrentUser, auth, setAuth }) => {\r\n\r\n    const location = useLocation()\r\n    const navigate = useNavigate()\r\n\r\n\r\n    const [regSurname, setRegSurname] = React.useState('')\r\n\r\n    const [regName, setRegName] = React.useState('')\r\n\r\n    const [email, setEmail] = React.useState('')\r\n\r\n    const [password, setPassword] = React.useState('')\r\n\r\n    const [passwordSecondField, setPasswordSecondField] = React.useState('')\r\n\r\n    const [error, setError] = React.useState('')\r\n\r\n    const handleChangeSurname = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setRegSurname(event.target.value)\r\n    }\r\n\r\n    const handleChangeName = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setRegName(event.target.value)\r\n    }\r\n\r\n    const handleChangeEmail = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setEmail(event.target.value)\r\n    }\r\n\r\n    const handleChangePassword = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setPassword(event.target.value)\r\n    }\r\n\r\n    const handleChangePasswordSecondField = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setPasswordSecondField(event.target.value)\r\n    }\r\n\r\n    const handleOnSubmit = (event: React.FormEvent) => {\r\n\r\n        event.preventDefault();\r\n        setError('')\r\n\r\n        if (!regName || !regSurname || !email || !password || !passwordSecondField) setError('Все поля должы быть заполнены!')\r\n        else if (password !== passwordSecondField) setError('Поля с паролями не совпадают')\r\n        else {\r\n\r\n            setAuth(true)\r\n\r\n            setCurrentUser(\r\n                {\r\n                    surname: regSurname,\r\n                    name: regName,\r\n                    email: email,\r\n                    password: password\r\n                }\r\n            )\r\n            navigate('/registration-success')\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={style.registration_container}>\r\n\r\n            <form autoComplete=\"off\" className={style.registration_form} onSubmit={handleOnSubmit}>\r\n                <h2>Регистрация</h2>\r\n\r\n                <TextField\r\n                    size=\"small\"\r\n                    error={!!error && !regSurname}\r\n                    fullWidth\r\n                    className={style.text_field}\r\n                    label={error && !regSurname ? \"Введите Фамилию\" : null}\r\n                    placeholder=\"Введите Фамилию\"\r\n                    variant=\"filled\"\r\n                    onChange={handleChangeSurname}\r\n                />\r\n\r\n                <TextField\r\n                    size=\"small\"\r\n                    error={!!error && !regName}\r\n                    fullWidth\r\n                    id=\"filled-error\"\r\n                    label={error && !regName ? \"Введите имя\" : null}\r\n                    placeholder=\"Введите имя\"\r\n                    variant=\"filled\"\r\n                    onChange={handleChangeName}\r\n                />\r\n\r\n                <TextField\r\n                    size=\"small\"\r\n                    error={!!error && !email}\r\n                    fullWidth\r\n                    id=\"filled-error\"\r\n                    type=\"email\"\r\n                    label={error && !email ? \"Введите адрес электронной почты\" : null}\r\n                    placeholder=\"Введите адрес электронной почты\"\r\n                    variant=\"filled\"\r\n                    onChange={handleChangeEmail}\r\n                />\r\n\r\n                <TextField\r\n                    size=\"small\"\r\n                    error={!!error && !password}\r\n                    fullWidth\r\n                    id=\"filled-error\"\r\n                    label={\r\n                        error && !password ? 'Введите пароль'\r\n                            : error && password !== passwordSecondField ? 'Пароли не совпадают' : null}\r\n                    placeholder=\"Введите пароль\"\r\n                    variant=\"filled\"\r\n                    onChange={handleChangePassword}\r\n                />\r\n\r\n                <TextField\r\n                    size=\"small\"\r\n                    error={!!error && !passwordSecondField}\r\n                    fullWidth\r\n                    id=\"filled-error\"\r\n                    label={\r\n                        error && !passwordSecondField ? 'Повторите пароль'\r\n                            : error && password !== passwordSecondField ? 'Пароли не совпадают' : null}\r\n                    placeholder=\"Повторите пароль\"\r\n                    variant=\"filled\"\r\n                    onChange={handleChangePasswordSecondField}\r\n                />\r\n\r\n                <label>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        className={style.reg_button}\r\n                        variant=\"contained\"\r\n                        size=\"large\"\r\n                        onSubmit={handleOnSubmit}>\r\n                        регистрация\r\n                    </Button>\r\n                </label>\r\n\r\n                <div className={style.form_footer}>\r\n                    <div>У вас уже есть аккаунт? </div>\r\n                    <span className={style.auth_anchor} onClick={() => navigate('/auth')}>Авторизация</span>\r\n                </div>\r\n\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Registration;","// extracted by mini-css-extract-plugin\nexport default {\"form_container\":\"registration_form_container__yYo4M\",\"registration_container\":\"registration_registration_container__2yYIv\",\"registration_form\":\"registration_registration_form__JjCUy\",\"registration_error\":\"registration_registration_error__boYaF\",\"form_footer\":\"registration_form_footer__5xgBw\",\"auth_anchor\":\"registration_auth_anchor__bJtya\",\"reg_succ_text\":\"registration_reg_succ_text__ZwcaA\",\"reg_succ_h\":\"registration_reg_succ_h__hp3Uf\"};"],"names":["_ref","currentUser","setCurrentUser","auth","setAuth","useLocation","navigate","useNavigate","regSurname","setRegSurname","React","regName","setRegName","email","setEmail","password","setPassword","passwordSecondField","setPasswordSecondField","error","setError","handleOnSubmit","event","preventDefault","surname","name","_jsx","className","style","registration_container","children","_jsxs","autoComplete","registration_form","onSubmit","TextField","size","fullWidth","text_field","label","placeholder","variant","onChange","target","value","id","type","Button","reg_button","form_footer","auth_anchor","onClick"],"sourceRoot":""}